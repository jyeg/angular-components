{"version":3,"sources":["karma.conf.js"],"names":[],"mappings":";;;;;AAGA,MAAM,CAAC,OAAO,GAAG,UAAS,MAAM,EAAE;AAChC,UAAM,CAAC,GAAG,CAAC;;;AAGT,gBAAQ,EAAE,EAAE;;;;AAKZ,kBAAU,EAAE,CAAC,OAAO,EAAE,MAAM,CAAC;;;AAI7B,aAAK,EAAE,CACH,EAAE,OAAO,EAAE,gBAAgB,EAAE,OAAO,EAAE,KAAK,EAAE,CAChD;;;AAID,eAAO,EAAE,EACR;;;;;AAMD,qBAAa,EAAE;AACX,4BAAgB,EAAE,CAAC,SAAS,EAAE,WAAW,CAAC;SAC7C;;AAED,eAAO,EAAE;AACL,mBAAO,EAAE,mBAAmB;AAC5B,kBAAM,EAAE;AACJ,uBAAO,EAAE;;;AAGL,kBAAE,IAAI,EAAE,SAAS,EAAE,MAAM,EAAE,KAAK,EAAE,EAClC,EAAE,IAAI,EAAE,SAAS,EAAE,MAAM,EAAE,kBAAkB,EAAE,EAC/C,EAAE,IAAI,EAAE,OAAO,EAAE,MAAM,EAAE,WAAW,EAAE,EACtC,EAAE,IAAI,EAAE,OAAO,EAAE,MAAM,EAAE,eAAe,EAAE,OAAO,EAAE,CAAC,aAAa,EAAE,cAAc,CAAC,EAAE,CACvF;aACJ;;AAED,kBAAM,EAAE;AACJ,mBAAG,EAAE,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,EAAE,OAAO,CAAC,SAAS,CAAC,EAAE,CAAC;aACjD;SACJ;;AAED,qBAAa,EAAE;AACX,kBAAM,EAAE,IAAI;SACf;;;;AAID,iBAAS,EAAE,CAAC,OAAO,CAAC;;;AAIpB,YAAI,EAAE,IAAI;;;AAIV,cAAM,EAAE,IAAI;;;;AAKZ,gBAAQ,EAAE,MAAM,CAAC,QAAQ;;;AAIzB,iBAAS,EAAE,KAAK;;;;AAKhB,gBAAQ,EAAE,CAAC,QAAQ,CAAC;;;;AAKpB,iBAAS,EAAE,IAAI;KAChB,CAAC,CAAA;CACH,CAAA","file":"karma.conf-compiled.js","sourcesContent":["// Karma configuration\n// Generated on Fri Jul 17 2015 22:40:09 GMT-0700 (PDT)\n\nmodule.exports = function(config) {\n  config.set({\n\n    // base path that will be used to resolve all patterns (eg. files, exclude)\n    basePath: '',\n\n\n    // frameworks to use\n    // available frameworks: https://npmjs.org/browse/keyword/karma-adapter\n    frameworks: ['mocha', 'chai'],\n\n\n    // list of files / patterns to load in the browser\n    files: [\n        { pattern: 'spec.bundle.js', watched: false }\n    ],\n\n\n    // list of files to exclude\n    exclude: [\n    ],\n\n\n    // preprocess matching files before serving them to the browser\n    // available preprocessors: https://npmjs.org/browse/keyword/karma-preprocessor\n    // use webpack and sourcemaps to preprocess the spec bundle file\n    preprocessors: {\n        'spec.bundle.js': ['webpack', 'sourcemap']\n    },\n\n    webpack :{\n        devtool: 'inline-source-map',\n        module: {\n            loaders: [\n                /* add the appropriate loaders */\n                /* almost the same as the webpack.config */\n                { test: /\\.html$/, loader: 'raw' },\n                { test: /\\.styl$/, loader: 'style!css!stylus' },\n                { test: /\\.css/, loader: 'style!css' },\n                { test: /\\.js$/, loader: 'babel?stage=1', exclude: [/client\\/lib/, /node_modules/] }\n            ]\n        },\n\n        stylus: {\n            use: [require('jeet')(), require('rupture')()]\n        }\n    },\n\n    webpackServer: {\n        noInfo: true\n    },\n    // test results reporter to use\n    // possible values: 'dots', 'progress'\n    // available reporters: https://npmjs.org/browse/keyword/karma-reporter\n    reporters: ['mocha'],\n\n\n    // web server port\n    port: 9876,\n\n\n    // enable / disable colors in the output (reporters and logs)\n    colors: true,\n\n\n    // level of logging\n    // possible values: config.LOG_DISABLE || config.LOG_ERROR || config.LOG_WARN || config.LOG_INFO || config.LOG_DEBUG\n    logLevel: config.LOG_INFO,\n\n\n    // enable / disable watching file and executing tests whenever any file changes\n    autoWatch: false,\n\n\n    // start these browsers\n    // available browser launchers: https://npmjs.org/browse/keyword/karma-launcher\n    browsers: ['Chrome'],\n\n\n    // Continuous Integration mode\n    // if true, Karma captures browsers, runs the tests and exits\n    singleRun: true\n  })\n}\n"]}